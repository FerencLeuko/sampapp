spring.profiles.active=development

##server
server.port = 8081
server.bookings.uri = http://localhost:8081/bookings/
server.cars.uri = http://localhost:8081/cars/

## mongodb
spring.data.mongodb.host = mongodb.middleware
spring.data.mongodb.authentication-database=admin
spring.data.mongodb.username = xx
spring.data.mongodb.password = xx
spring.data.mongodb.database=  sampleappck
mongock.change-logs-scan-package=com.ferenc.reservation.repository.migration

## keycloak
spring.security.oauth2.client.provider.external.issuer-uri = http://localhost:8080/realms/sampleApp
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username
spring.security.oauth2.client.registration.external.provider = external
spring.security.oauth2.client.registration.external.client-name = sampleApp clients
spring.security.oauth2.client.registration.external.client-id = sampleApp clients
spring.security.oauth2.client.registration.external.client-secret = xx
spring.security.oauth2.client.registration.external.scope = openid,offline_access,profile,user
spring.security.oauth2.client.registration.external.authorization-grant-type = authorization_code
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/sampleApp

##rabbit
spring.rabbitmq.host=rabbitmq-ha.middleware
spring.rabbitmq.username=xx
spring.rabbitmq.password=xx
spring.rabbitmq.virtualHost=/xx

booking.exchange.name=sample
booking.queue.name=reservation
booking.routing.key=booking

response.exchange.name=resp
response.queue.name=response
response.routing.key=bookingresp

error.exchange.name=err
error.queue.name=error
error.routing.key=bookingerr

## redis
spring.redis.host=localhost
spring.redis.port=6379
spring.redis.password=xx


